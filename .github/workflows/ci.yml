name: CI Pipeline

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: totem_auth_sql_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
      mailhog:
        image: mailhog/mailhog
        ports:
          - 1025:1025
          - 8025:8025

    outputs:
      node-version: 20

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install & Prepare
        run: |
          npm ci
          npx prisma generate --schema=apps/totem-auth-sql/src/prisma/schema.prisma
          npx prisma migrate deploy --schema=apps/totem-auth-sql/src/prisma/schema.prisma

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run test

  e2e-tests-api:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run test:e2eApi

  e2e-tests-sql:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run test:e2eSql

  e2e-tests-mail:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run test:e2eMail

  coverage:
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests-api, e2e-tests-sql, e2e-tests-mail]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run test:coverage
      - name: Upload to SonarCloud
        if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: npx sonar-scanner

  snyk-security:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
