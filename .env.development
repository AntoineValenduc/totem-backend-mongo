# JWT
JWT_SECRET= 'votreSuperSecretPourDev'
#votreSuperSecretPourDev test_secret
JWT_EXPIRES_IN= '7d'

# Mongo
#MONGO_URI=mongodb://localhost:27017/totemDB
#TCP_HOST= 'localhost'
#TCP_PORT= '3001'
#mongodb://127.0.0.1:27017/totemDB
MONGO_USER=totem_user
MONGO_PASSWORD=totem_pass
MONGO_DB=totemDB
MONGO_HOST=mongo
MONGO_PORT=27017
MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/${MONGO_DB}?authSource=${MONGO_DB}

# SQL
POSTGRES_DB= "postgres"
POSTGRES_USER= "postgres"
POSTGRES_PASSWORD= "admin"
POSTGRES_PORT= "5432"
POSTGRES_HOST= "localhost"
POSTGRES_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
#POSTGRES_URL= 'postgresql://postgres:postgres@localhost:5432/postgres';



mongo:
    image: mongo
    container_name: totem-mongo-db
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db

  #Microservice services m√©tier utilisant Mongo
  totem-mongo:
    build:
      context: .
      dockerfile: apps/totem-mongo/Dockerfile
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/totemDB
    ports:
      - '3001:3001'

  #API back-end
  api-gateway:
    build:
      context: .
      dockerfile: apps/totem-api-gateway/Dockerfile
    depends_on:
      - totem-mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/totemDB
    ports:
      - '3000:3000'

     
  # BDD PostgreSQL
  postgres:
    image: postgres:15
    container_name: totem-postgres
    ports:
      - '5432:5432'
    env_file:
      - .env
      
  # Microservice Auth SQL
  totem-auth-sql:
    build:
      context: .
      dockerfile: apps/totem-auth-sql/Dockerfile
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '3002:3002'
